name: Build and Deploy

on:
  push:
    branches: [ dev-testing ]
  pull_request:
    branches: [ dev-testing ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]

    steps:
    - uses: actions/checkout@v3
    
    # Clean up previous builds
    - name: Clean up
      run: |
        rm -rf client/dist
        rm -rf server/dist
        rm -rf node_modules
        rm -rf client/node_modules
        rm -rf server/node_modules

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Install dependencies
    - name: Install dependencies
      run: |
        npm ci
        cd client && npm ci
        cd ../server && npm ci

    # Build Server
    - name: Build Server
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        GOOGLE_SPREADSHEET_ID: ${{ secrets.GOOGLE_SPREADSHEET_ID }}
      run: |
        cd server
        npm run build

    # Build Client
    - name: Build Client
      env:
        REACT_APP_API_URL: ${{ secrets.API_URL }}
        REACT_APP_GOOGLE_SPREADSHEET_ID: ${{ secrets.GOOGLE_SPREADSHEET_ID }}
      run: |
        cd client
        npm run build

    # Test Server
    - name: Test Server
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        GOOGLE_SPREADSHEET_ID: ${{ secrets.GOOGLE_SPREADSHEET_ID }}
      run: |
        cd server
        npm test

    # Test Client
    - name: Test Client
      env:
        REACT_APP_API_URL: ${{ secrets.API_URL }}
        REACT_APP_GOOGLE_SPREADSHEET_ID: ${{ secrets.GOOGLE_SPREADSHEET_ID }}
      run: |
        cd client
        npm test

    # Deploy
    - name: Deploy
      if: github.ref == 'refs/heads/dev-testing'
      uses: actions/github-script@v6
      with:
        script: |
          // Deployment script here
          console.log('Deployment completed successfully!')
